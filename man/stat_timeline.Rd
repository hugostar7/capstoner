% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stat_timeline.R
\name{stat_timeline}
\alias{stat_timeline}
\title{Add layer: Time Series Plots}
\usage{
stat_timeline(
  mapping = NULL,
  data = NULL,
  geom = "timeline",
  position = "identity",
  show.legend = NA,
  inherit.aes = TRUE,
  na.rm = FALSE,
  xMin = as.Date("0001-01-01"),
  xMax = as.Date("2050-12-31"),
  ...
)
}
\arguments{
\item{mapping, }{set of aesthetics}

\item{data, }{data used in statistical transformation}

\item{geom}{geom layer function to call}

\item{position}{where to plot each group of graphical element}

\item{show.legend}{logical or NA. TRUE always display legend,
FALSE does not. NA display legend only if suuplied.}

\item{inherit.aes}{logical to indicate whether to inherit aes
from ggplot or other top geoms}

\item{na.rm}{logical parameter to indicate how NAs data should be removed}

\item{xMin}{date parameter used to subset data}

\item{xMax}{date parameter used to subset data}

\item{...}{other arguments to be passed}
}
\description{
Compute layers to be added when mapping variables
in data transformed by StatTimeline to aesthetics
to create plots
}
\examples{
# Example 1
lcd = eq_location_clean(earthquakes, countries = "ALASKA")
ggplot2::ggplot(lcd, ggplot2::aes(x = DATE)) +
stat_timeline()

# Example 2
lcd = eq_location_clean(earthquakes, 2000, 2020, c("CHINA","TURKEY"))
ggplot2::ggplot(
  lcd,
  ggplot2::aes(x = DATE, y = COUNTRY, colour = Deaths, size = Mag)) +
  stat_timeline()

# Example 3
df = data.frame(
DATE = c(1,2,3,1,2),
COUNTRY = c("C","A","C","B","B")
)

ggplot2::ggplot(df, ggplot2::aes(x = DATE, y = COUNTRY)) +
 stat_timeline(xMin = 2,xMax = 5)

# Example 4
data = babygrowth
ggplot2::ggplot(data, ggplot2::aes(x = DATE, y = 1, colour = height,
                                  size = weight)) +
 stat_timeline(alpha = .5)

# Example 5
data = babygrowth
ggplot2::ggplot(data, ggplot2::aes(x = DATE, y = AGE, colour = height,
                                  size = weight)) +
 stat_timeline()

# Example 6
data = my_EQ_clean
ggplot2::ggplot(data, ggplot2::aes(x = DATE, y = COUNTRY, colour = Deaths,
                                   size = Mag)) +
 stat_timeline()

# Example 7
data = my_EQ_clean
ggplot2::ggplot(data, ggplot2::aes(x = DATE, colour = Deaths, size = Mag)) +
  stat_timeline()

}
